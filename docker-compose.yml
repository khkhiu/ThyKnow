# File: docker-compose.yml
# Docker Compose with PostgreSQL configuration
services:
  # Express.js application
  app:
    build:
      context: ./firebase
      dockerfile: Dockerfile
    container_name: thyknow-express
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./firebase/logs:/app/logs
      - ./firebase/src/constants/prompts:/app/dist/constants/prompts
    environment:
      - NODE_ENV=development
      - PORT=3000
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=thyknow
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=false
      - TIMEZONE=Asia/Singapore
      - PROMPT_DAY=1
      - PROMPT_HOUR=9
      - MAX_HISTORY=5
    depends_on:
      postgres:
        condition: service_healthy

  # PostgreSQL database
  postgres:
    image: postgres:14
    container_name: thyknow-postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=thyknow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Adminer - Database administration tool (optional)
  adminer:
    image: adminer
    container_name: thyknow-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  postgres-data: